include:
  - homeassistant.compose.yml
  - arr.compose.yml

services:
  caddy:
    image: caddy:latest
    container_name: home-caddy
    ports:
      - "80:80"   # HTTP port for verification
      - "443:443" # HTTPS port
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile  
      - ./caddy_data:/data  
      - ./caddy_config:/config  
      - ./web:/var/www/html
    network_mode: host
  registry:
    image: registry:2
    container_name: home-registry
    restart: always
    volumes:
      - ./registry_data:/var/lib/registry  # Store registry data
    ports:
      - "5000:5000"
  plex:
    container_name: home-plex
    image: plexinc/pms-docker
    restart: unless-stopped
    env_file:
      - plex.env
    network_mode: host
    volumes:
      - ./plex/config:/config
      - ./plex/transcode:/transcode
      - /mnt/hdd/media:/data
  jellyfin:
    image: jellyfin/jellyfin
    container_name: home-jellyfin
    network_mode: 'host'
    volumes:
      - ./jellyfin/config:/config
      - ./pjellyfin/cache:/cache
      - type: bind
        source: /mnt/hdd/media
        target: /media
      # - type: bind
      #   source: /path/to/media2
      #   target: /media2
      #   read_only: true
      # Optional - extra fonts to be used during transcoding with subtitle burn-in
      # - type: bind
      #   source: /path/to/fonts
      #   target: /usr/local/share/fonts/custom
      #   read_only: true
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    # environment:
    #   - JELLYFIN_PublishedServerUrl=http://example.com
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  filebrowser:
    image: filebrowser/filebrowser
    container_name: home-filebrowser
    ports:
      - "8081:80" 
    volumes:
      - /mnt/hdd:/srv/hdd               # Mounts the root directory to /srv
      - /home/michael/code/asl/recordings:/srv/recordings
      - ./filebrowser/filebrowser.db:/database/filebrowser.db # Mounts the database file
      - ./filebrowser/.filebrowser.json:/.filebrowser.json # Mounts the configuration file
    user: "${UID}:${GID}"
  speedtest:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    container_name: home-speedtest
    env_file:
      - speedtest.env
    volumes:
      - ./speedtest-tracker/data:/config
    ports:
      - 8082:80
    restart: unless-stopped
  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre/config:/config
      - /mnt/hdd/books:/books
    ports:
      - 8095:8083
    restart: unless-stopped
